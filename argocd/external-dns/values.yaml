external-dns:
  image:
    #repository: k8s.gcr.io/external-dns/external-dns
    # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
    #tag: "0.12.2-debian-11-r14"
    pullPolicy: Always
  
  imagePullSecrets: []
  
  nameOverride: ""
  fullnameOverride: ""
  
  commonLabels: {}
  
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  rbac:
    # Specifies whether RBAC resources should be created
    create: true
    additionalPermissions: []
  
  # Annotations to add to the Deployment
  deploymentAnnotations: {}
  
  podLabels: {}
  
  # Annotations to add to the Pod
  podAnnotations: {}
  
  shareProcessNamespace: false
  
  podSecurityContext:
    fsGroup: 65534
  
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]
  
  # Defaults to `ClusterFirst`.
  # Valid values are: `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
  dnsPolicy:
  
  priorityClassName: ""
  
  terminationGracePeriodSeconds:
  
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    interval: 1m
    scrapeTimeout: 10s
  
  env: 
    - name: CF_API_TOKEN
      valueFrom:
        secretKeyRef:
          key: cloudflare_api_token
          name: external-dns
          optional: true
    - name: CF_API_KEY
      valueFrom:
        secretKeyRef:
          key: cloudflare_api_key
          name: external-dns
          optional: true
    - name: CF_API_EMAIL
      valueFrom:
        secretKeyRef:
          key: cloudflare_api_email
          name: external-dns
          optional: true
  
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  service:
    port: 7979
    annotations: {}
  
  extraVolumes: []
  
  extraVolumeMounts: []
  
  resources: {}
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}
  
  topologySpreadConstraints: []
  
  logLevel: info
  logFormat: text
  
  interval: 1m
  triggerLoopOnEvent: false
  
  sources:
    - service
    - ingress
  
  policy: upsert-only
  
  registry: txt
  txtOwnerId: ""
  txtPrefix: ""
  txtSuffix: ""
  
  domainFilters: []
  
  provider: cloudflare
  
  extraArgs: []
  
  deploymentStrategy:
    type: Recreate
    
  
